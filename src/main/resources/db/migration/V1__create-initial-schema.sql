-- V1__create-initial-schema.sql
-- This script creates the initial database schema for the JavaLoom Commerce application.

-- =================================================================================================
-- PHASE 1: CREATE TABLES
-- Create all tables with their columns and primary keys.
-- Foreign keys will be added in Phase 2 to avoid dependency issues during creation.
-- =================================================================================================

-- Core Entities
CREATE TABLE category (
                          id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                          name VARCHAR(255),
                          CONSTRAINT pk_category PRIMARY KEY (id)
);

CREATE TABLE product (
                         id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                         name VARCHAR(255),
                         price DOUBLE PRECISION,
                         CONSTRAINT pk_product PRIMARY KEY (id)
);

CREATE TABLE state (
                       id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                       name VARCHAR(255),
                       CONSTRAINT pk_state PRIMARY KEY (id)
);

CREATE TABLE city (
                      id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                      name VARCHAR(255),
                      state_id BIGINT,
                      CONSTRAINT pk_city PRIMARY KEY (id)
);

CREATE TABLE customer (
                          id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                          name VARCHAR(255),
                          email VARCHAR(255),
                          identification_number VARCHAR(255),
                          customer_type INTEGER,
                          CONSTRAINT pk_customer PRIMARY KEY (id)
);

CREATE TABLE address (
                         id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                         street VARCHAR(255),
                         number VARCHAR(255),
                         complement VARCHAR(255),
                         neighborhood VARCHAR(255),
                         zip_code VARCHAR(255),
                         customer_id BIGINT,
                         state_id BIGINT,
                         city_id BIGINT,
                         CONSTRAINT pk_address PRIMARY KEY (id)
);

CREATE TABLE orders (
                        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                        instant TIMESTAMP WITHOUT TIME ZONE,
                        customer_id BIGINT,
                        deliver_address_id BIGINT,
                        CONSTRAINT pk_orders PRIMARY KEY (id)
);


CREATE TABLE payment (
                         id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                         state_payment INTEGER,
                         order_id BIGINT,
                         CONSTRAINT pk_payment PRIMARY KEY (id)
);




CREATE TABLE credit_payment (
                                id BIGINT NOT NULL,
                                number_of_installments INTEGER,
                                CONSTRAINT pk_credit_payment PRIMARY KEY (id)
);

CREATE TABLE pix_payment (
                             id BIGINT NOT NULL,
                             expire_date DATE,
                             date_payment DATE,
                             CONSTRAINT pk_pix_payment PRIMARY KEY (id)
);

CREATE TABLE shopping_cart (
                               id BIGINT NOT NULL,
                               customer_id BIGINT,
                               CONSTRAINT pk_shopping_cart PRIMARY KEY (id)
);

CREATE TABLE cart_item (
                           quantity INTEGER,
                           shopping_cart_id BIGINT NOT NULL,
                           product_id BIGINT NOT NULL,
                           CONSTRAINT pk_cart_item PRIMARY KEY (shopping_cart_id, product_id)
);

-- Linking and Element Collection Tables
CREATE TABLE phone (
                       customer_id BIGINT NOT NULL,
                       phones VARCHAR(255)
);

CREATE TABLE product_category (
                                  category_id BIGINT NOT NULL,
                                  product_id BIGINT NOT NULL,
                                  CONSTRAINT pk_product_category PRIMARY KEY (category_id, product_id)
);

CREATE TABLE order_item (
                            discount DOUBLE PRECISION,
                            quantity INTEGER,
                            price DOUBLE PRECISION,
                            order_id BIGINT NOT NULL,
                            product_id BIGINT NOT NULL,
                            CONSTRAINT pk_order_item PRIMARY KEY (order_id, product_id)
);


-- =================================================================================================
-- PHASE 2: ADD FOREIGN KEY CONSTRAINTS
-- Add all foreign key constraints now that the tables exist.
-- =================================================================================================

ALTER TABLE city ADD CONSTRAINT FK_CITY_ON_STATE FOREIGN KEY (state_id) REFERENCES state (id);
ALTER TABLE address ADD CONSTRAINT FK_ADDRESS_ON_CITY FOREIGN KEY (city_id) REFERENCES city (id);
ALTER TABLE address ADD CONSTRAINT FK_ADDRESS_ON_CUSTOMER FOREIGN KEY (customer_id) REFERENCES customer (id);
ALTER TABLE address ADD CONSTRAINT FK_ADDRESS_ON_STATE FOREIGN KEY (state_id) REFERENCES state (id);
ALTER TABLE orders ADD CONSTRAINT FK_ORDERS_ON_CUSTOMER FOREIGN KEY (customer_id) REFERENCES customer (id);
ALTER TABLE orders ADD CONSTRAINT FK_ORDERS_ON_DELIVERADDRESS FOREIGN KEY (deliver_address_id) REFERENCES address (id);
ALTER TABLE payment ADD CONSTRAINT FK_PAYMENT_ON_ORDER FOREIGN KEY (order_id) REFERENCES orders (id);
ALTER TABLE credit_payment ADD CONSTRAINT FK_CREDIT_PAYMENT_ON_ID FOREIGN KEY (id) REFERENCES payment (id);
ALTER TABLE pix_payment ADD CONSTRAINT FK_PIX_PAYMENT_ON_ID FOREIGN KEY (id) REFERENCES payment (id);
ALTER TABLE phone ADD CONSTRAINT fk_phone_on_customer FOREIGN KEY (customer_id) REFERENCES customer (id);
ALTER TABLE product_category ADD CONSTRAINT fk_procat_on_category FOREIGN KEY (category_id) REFERENCES category (id);
ALTER TABLE product_category ADD CONSTRAINT fk_procat_on_product FOREIGN KEY (product_id) REFERENCES product (id);
ALTER TABLE order_item ADD CONSTRAINT fk_order_item_on_order FOREIGN KEY (order_id) REFERENCES orders (id);
ALTER TABLE order_item ADD CONSTRAINT fk_order_item_on_product FOREIGN KEY (product_id) REFERENCES product (id);
ALTER TABLE shopping_cart ADD CONSTRAINT FK_SHOPPING_CART_ON_CUSTOMER FOREIGN KEY (id) REFERENCES customer (id);
ALTER TABLE cart_item ADD CONSTRAINT fk_cart_item_on_product FOREIGN KEY (product_id) REFERENCES product (id);
ALTER TABLE cart_item ADD CONSTRAINT fk_cart_item_on_shopping_cart FOREIGN KEY (shopping_cart_id) REFERENCES shopping_cart (id);
